---
# Copyright (c) 2020 Contributors to Smart-Data-Models
# see https://github.com/smart-data-models/dataModel.Device

Device:
  required:
    - id
    - type
    - category
    - controlledProperty
  allOf:
    - $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/Common
  type: object
  description: |
    An apparatus (hardware + software + firmware) intended to accomplish a
    particular task (sensing the environment, actuating, etc.).
  properties:
    address:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/address
    alternateName:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/alternateName
    areaServed:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/areaServed
    batteryLevel:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Number'
      type: number
      description: |
        Device battery level. It must be equal to `1.0` when battery is full. `0.0` when battery Ã¬s empty.
        `-1` when transiently cannot be determined.
    category:
      x-ngsi:
        type: Property
      type: array
      description: 'See attribute category from DeviceModel. Optional but recommended to optimize queries.'
      items:
        allOf:
          - $ref: "https://smart-data-models.github.io/data-models/saref-terms.yaml#/Categories"
    configuration:
      x-ngsi:
        type: Property
      type: object
      description: |
        Device technical configuration. This attribute is intended to be a dictionary of properties which capture parameters
        which have to do with the configuration of a device (timeouts, reporting periods, etc.) and which are not currently 
        covered by the standard attributes defined by this model.
    controlledAsset:
      x-ngsi:
        type: Property
      type: array
      description: 'The asset(s) (building, object, etc.) controlled by the device.'
      items:
        oneOf:
          - type: string
            format: uri
          - &ref_0
            anyOf:
              - type: string
                minLength: 1
                maxLength: 256
                pattern: '^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$'
              - type: string
                format: uri
    controlledProperty:
      x-ngsi:
        type: Property
      type: array
      description: "See attribute `controlledProperty` from [DeviceModel](../../DeviceModel/doc/spec.md). Optional but recommended to optimize queries."
      items:
        anyOf:
          - $ref: "https://smart-data-models.github.io/data-models/saref-terms.yaml#/ControlledProperties"
    dataProvider:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/dataProvider
    dateFirstUsed:
      x-ngsi:
        type: Property
        model: 'https://schema.org/DateTime'
      type: string
      description: 'A timestamp which denotes when the device was first used.'
      format: date-time
    dateInstalled:
      x-ngsi:
        type: Property
        model: 'https://schema.org/DateTime'
      type: string
      description: 'A timestamp which denotes when the device was installed (if it requires installation).'
      format: date-time
    dateLastCalibration:
      x-ngsi:
        type: Property
        model: 'https://schema.org/DateTime'
      type: string
      description: 'A timestamp which denotes when the last calibration of the device happened.'
      format: date-time
    dateLastValueReported:
      x-ngsi:
        type: Property
        model: 'https://schema.org/DateTime'
      type: string
      description: 'A timestamp which denotes the last time when the device successfully reported data to the cloud.'
      format: date-time
    dateManufactured:
      x-ngsi:
        type: Property
        model: 'https://schema.org/DateTime'
      type: string
      description: 'A timestamp which denotes when the device was manufactured.'
      format: date-time
    description:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/description
    deviceState:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'State of this device from an operational point of view. Its value can be vendor dependent.'
    firmwareVersion:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'The firmware version of this device.'
    hardwareVersion:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'The hardware version of this device.'
    ipAddress:
      x-ngsi:
        type: Property
      type: array
      description: 'The IP address of the device. It can be a comma separated list of values if the device has more than one IP address.'
      items:
        type: string
        oneOf:
          - format: ipv4
          - format: ipv6
    location:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/location
    macAddress:
      x-ngsi:
        type: Property
      type: array
      description: 'he MAC address of the device.'
      items:
        type: string
        pattern: '^([[:xdigit:]]{2}[:.-]?){5}[[:xdigit:]]{2}$'
    mcc:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'Mobile Country Code - This property identifies univoquely the country of the mobile network the device is attached to.'
    mnc:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: |
        This property identifies the Mobile Network Code (MNC) of the network the device is attached to. The MNC is used in combination with a 
        Mobile Country Code (MCC) (also known as a MCC / MNC tuple) to uniquely identify a mobile phone operator/carrier using the GSM, CDMA, 
        iDEN, TETRA and 3G / 4G public land mobile networks and some satellite mobile networks.
    name:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/name
    osVersion:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'The version of the host operating system device.'
    owner:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/owner
    provider:
      x-ngsi:
        type: Property
        model: 
          - 'https://schema.org/Organization'
          - 'https://schema.org/Person'
      type: string
      description: 'The provider of the device.'
    refDeviceModel:
      x-ngsi:
        type: Relationship
        model: 'https://schema.org/URL'
      type: string
      format: uri
      description: 'Reference to an entity of type DeviceModel.'
    rssi:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Number'
      type: number
      description: |
        Received signal strength indicator for a wireless enabled device. It must be equal to `1.0` when the signal
        strength is maximum. `0.0` when signal is missing. `-1.0` when it cannot be determined.'
    serialNumber:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'The serial number assigned by the manufacturer.'
    softwareVersion:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'The software version of this device.'
    source:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/source
    supportedProtocol:
      x-ngsi:
        type: Property
      type: array
      description: ''
      items:
        anyOf:
          - $ref: "https://smart-data-models.github.io/dataModel.Device/device-model.yaml#/SupportedProtocol"
    value:
      x-ngsi:
        type: Property
        model: 
          - 'https://schema.org/Text'
          - 'https://schema.org/QuantitativeValue'
      type: string
      description: |
        A observed or reported value. For actuator devices, it is an attribute that allows a controlling application to 
        change the actuation setting. For instance, a switch device which is currently _on_ can report a value `on` of type Text. 
        Obviously, in order to toggle the referred switch, this attribute value will have to be changed to `off`
