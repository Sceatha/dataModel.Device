Device:
  description: 'An apparatus (hardware + software + firmware) intended to accomplish a particular task (sensing the environment, actuating, etc.).'
  properties:
    address:
      description: ""
      properties:
        addressCountry:
          type: string
        addressLocality:
          type: string
        addressRegion:
          type: string
        areaServed:
          type: string
        postOfficeBoxNumber:
          type: string
        postalCode:
          type: string
        streetAddress:
          type: string
      type: 'The mailing address.'
    alternateName:
      description: ""
      type: 'An alternative name for this item'
    areaServed:
      description: ""
      type: 'The geographic area where a service or offered item is provided.'
    batteryLevel:
      description: ""
      oneOf:
        - maximum: 1
          minimum: 0
          type: number
        - const: -1
          type: number
      type: '-1 when transiently cannot be determined.'
    configuration:
      description: ""
      type: 'This attribute is intended to be a dictionary of properties which capture parameters which have to do with the configuration of a device (timeouts, reporting periods, etc.) and which are not currently covered by the standard attributes defined by this model.'
    controlledAsset:
      description: ""
      items:
        oneOf:
          - format: uri
            type: string
          - anyOf: &device_-_properties_-_id_-_anyof
              - description: 'Property. Identifier format of any NGSI entity'
                maxLength: 256
                minLength: 1
                pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
                type: string
              - description: 'Property. Identifier format of any NGSI entity'
                format: uri
                type: string
      type: 'List of the asset(s) (building, object, etc.) controlled by the device.'
    dataProvider:
      description: ""
      type: 'A sequence of characters identifying the provider of the harmonised data entity.'
    dateCreated:
      description: ""
      format: date-time
      type: 'This will usually be allocated by the storage platform.'
    dateFirstUsed:
      description: ""
      format: date-time
      type: 'A timestamp which denotes when the device was first used.'
    dateInstalled:
      description: ""
      format: date-time
      type: 'A timestamp which denotes when the device was installed (if it requires installation).'
    dateLastCalibration:
      description: ""
      format: date-time
      type: 'A timestamp which denotes when the last calibration of the device happened.'
    dateLastValueReported:
      description: ""
      format: date-time
      type: 'Model:''https://schema.org/DateTime''.A timestamp which denotes the last time when the device successfully reported data to the cloud..'
    dateManufactured:
      description: ""
      format: date-time
      type: 'A timestamp which denotes when the device was manufactured.'
    dateModified:
      description: ""
      format: date-time
      type: 'This will usually be allocated by the storage platform.'
    depth:
      description: ""
      type: 'All units are accepted in [CEFACT](https://www.unece.org/cefact.html) code'
    description:
      description: ""
      type: 'A description of this item'
    deviceState:
      description: ""
      type: 'Its value can be vendor dependent.'
    direction:
      description: ""
      enum:
        - Inlet
        - Outlet
        - Entry
        - Exit
      type: 'A timestamp which denotes when the device was installed (if it requires installation).'
    distance:
      description: ""
      type: 'All units are accepted in [CEFACT](https://www.unece.org/cefact.html) code'
    firmwareVersion:
      description: ""
      type: 'The firmware version of this device.'
    hardwareVersion:
      description: ""
      type: 'The hardware version of this device.'
    id:
      anyOf: *device_-_properties_-_id_-_anyof
    ipAddress:
      description: ""
      items:
        oneOf:
          - format: ipv4
          - format: ipv6
        type: string
      type: 'It can be a comma separated list of values if the device has more than one IP address.'
    location:
      $id: https://geojson.org/schema/Geometry.json
      $schema: "http://json-schema.org/draft-07/schema#"
      oneOf:
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                type: number
              minItems: 2
              type: array
            type:
              enum:
                - Point
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Point'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 2
              type: array
            type:
              enum:
                - LineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON LineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 4
                type: array
              type: array
            type:
              enum:
                - Polygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Polygon'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiPoint
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPoint'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiLineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiLineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 4
                  type: array
                type: array
              type: array
            type:
              enum:
                - MultiPolygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPolygon'
          type: object
      title: 'GeoJSON Geometry'
    macAddress:
      description: ""
      items:
        pattern: ^([[:xdigit:]]{2}[:.-]?){5}[[:xdigit:]]{2}$
        type: string
      type: 'The MAC address of the device'
    mnc:
      description: ""
      type: 'The MNC is used in combination with a Mobile Country Code (MCC) (also known as a ''MCC / MNC tuple'') to uniquely identify a mobile phone operator/carrier using the GSM, CDMA, iDEN, TETRA and 3G / 4G public land mobile networks and some satellite mobile networks.'
    name:
      description: ""
      type: 'The name of this item.'
    osVersion:
      description: ""
      type: 'The version of the host operating system device.'
    owner:
      description: ""
      items:
        anyOf: *device_-_properties_-_id_-_anyof
      type: 'A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)'
    provider:
      description: ""
      type: 'The provider of the device.'
    refDeviceModel:
      description: ""
      oneOf:
        - format: uri
          type: string
        - anyOf: *device_-_properties_-_id_-_anyof
      type: 'Model of the device'
    relativePosition:
      description: ""
      type: 'Location of this device in a coordinate system according to its local emplacement.'
    rssi:
      description: ""
      type: ""
    seeAlso:
      oneOf:
        - items:
            - format: uri
              type: string
          minItems: 1
          type: array
        - format: uri
          type: string
    serialNumber:
      description: ""
      type: 'The serial number assigned by the manufacturer.'
    softwareVersion:
      description: ""
      type: 'The software version of this device.'
    source:
      description: ""
      type: 'Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.'
    type:
      description: ""
      enum:
        - Device
      type: 'It has to be Device'
    value:
      description: ""
      type: 'Obviously, in order to toggle the referred switch, this attribute value will have to be changed to `off`.'
  required:
    - id
    - type
    - category
    - controlledProperty
  type: object
